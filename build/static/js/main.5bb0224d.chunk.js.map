{"version":3,"sources":["hooks/useIsLoggedIn.js","userContext.js","Homepage.js","SearchBar.js","CompanyCard.js","CompanyList.js","Companies.js","JobCard.js","Company.js","JobsList.js","Jobs.js","EditProfileForm.js","Profile.js","SignUpForm.js","SignUp.js","LoginForm.js","Login.js","Logout.js","NavBar.js","Routes.js","hooks/useSignUp.js","hooks/useLogin.js","hooks/useGetUser.js","api.js","hooks/useUserUpdate.js","hooks/useLocalStorage.js","hooks/useApplyForJob.js","App.js","reportWebVitals.js","index.js"],"names":["useIsLoggedIn","isLoggedIn","JSON","parse","localStorage","getItem","token","UserContext","React","createContext","Homepage","user","useContext","className","Jumbotron","firstName","SearchBar","handleSubmit","useState","search","formData","setFormData","Form","onSubmit","e","inline","FormGroup","Input","type","value","placeholder","onChange","fData","target","Button","color","CompanyCard","company","Card","CardBody","CardTitle","tag","CardLink","NavLink","exact","to","handle","name","CardText","description","CompanyList","companies","setCompanies","JoblyApi","a","preventDefault","searchForCompanies","filteredCompanies","Container","map","Companies","hasLoaded","setHasLoaded","useEffect","getAllCompanies","res","getCompanies","JobCard","job","displayCompany","applyForJob","setUser","hasApplied","setHasApplied","handleClick","updatedUser","applications","includes","id","title","CardSubtitle","salary","equity","companyName","onClick","disabled","Company","setCompany","useParams","companyHandle","getCompany","getAndReload","jobs","JobsList","setJobs","searchForJobs","Jobs","getAllJobs","getJobs","EditProfileForm","handleUpdate","initialState","lastName","email","showMessage","setShowMessage","handleChange","username","row","Col","sm","size","offset","Label","for","Alert","Profile","SignUpForm","handleSignUp","password","SignUp","style","height","LoginForm","handleLogin","Login","Logout","tokenFromLogin","setTokenFromLogin","tokenFromSignUp","setTokenFromSignUp","setTFLS","clear","NavBar","props","isOpen","setIsOpen","Navbar","expand","NavbarBrand","RRNavLink","NavbarToggler","Collapse","navbar","Nav","NavItem","Routes","path","useSignUp","history","useHistory","setToken","console","log","signUp","respToken","push","errors","message","useLogin","login","useGetUser","tokenFromLocalStorage","getUser","userResp","getInformation","BASE_URL","process","endpoint","data","method","debug","url","headers","Authorization","params","axios","error","response","Array","isArray","this","request","trim","length","userData","jwt","decode","jobId","useUserUpdate","updateUser","useLocalStorage","key","window","alert","state","setState","setItem","useApplyForJob","App","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5bb0224d.chunk.js","sourcesContent":["const useIsLoggedIn = () => {\n  let isLoggedIn;\n  if (!JSON.parse(localStorage.getItem('token'))) {\n    isLoggedIn = null;\n  }\n  else if (JSON.parse(localStorage.getItem('token')).token) {\n    isLoggedIn = true;\n  }\n\n  return isLoggedIn;\n};\n\nexport default useIsLoggedIn;","import React from 'react';\n\nconst UserContext = React.createContext();\n\nexport default UserContext;","import React, { useContext } from 'react';\nimport UserContext from './userContext';\nimport { Jumbotron } from 'reactstrap';\nimport './Homepage.css';\n\nconst Homepage = () => {\n  const { user } = useContext(UserContext);\n  return (\n    <div className=\"Homepage\">\n      <Jumbotron className=\"Homepage-jumbotron\">\n        <h1 className=\"display-3\">Jobly</h1>\n        <p className=\"lead\">Your go-to place for the best jobs.</p>\n        {user && (\n          <>\n            <hr className=\"my-2\" />\n            <h3>Welcome back {user.firstName}!</h3>\n          </>\n        )}\n      </Jumbotron>\n    </div>\n  )\n};\n\nexport default Homepage;","import React, { useState } from 'react';\nimport { Button, Form, FormGroup, Input } from 'reactstrap';\n\nconst SearchBar = ({ handleSubmit }) => {\n  const [formData, setFormData] = useState({search: ''});\n  const handleChange = e => {\n    setFormData(fData => ({\n      search: e.target.value\n    }))\n  }\n  return (\n    <Form onSubmit={e => handleSubmit(e, formData)} className=\"mt-5 mb-3\" inline>\n      <FormGroup>\n      <Input\n        type=\"search\"\n        value={formData.search}\n        placeholder=\"Enter search term..\"\n        onChange={handleChange}\n      />\n      </FormGroup>\n      <Button color=\"primary\" className=\"mt-3\">Search</Button>\n    </Form>\n  )\n};\n\nexport default SearchBar;","import React from 'react';\nimport { NavLink } from 'react-router-dom'\nimport {\n  Card, CardText, CardBody,\n  CardTitle, CardLink\n} from 'reactstrap';\nimport './CompanyCard.css';\n\n\nconst CompanyCard = ({ company }) => {\n  return (\n    <div className=\"CompanyCard\">\n      <Card className=\"my-3\">\n        <CardBody>\n          <CardTitle tag=\"h5\">\n            <CardLink tag={NavLink} exact to={`/companies/${company.handle}`}>\n              {company.name}\n            </CardLink>\n          </CardTitle>\n          <CardText>{company.description}</CardText>\n        </CardBody>\n      </Card>\n    </div>\n  );\n};\n\nexport default CompanyCard;","import React, { useContext } from 'react';\nimport UserContext from './userContext';\nimport SearchBar from './SearchBar';\nimport CompanyCard from './CompanyCard';\nimport { Container } from 'reactstrap'\n\nconst CompanyList = ({ companies, setCompanies }) => {\n  const { JoblyApi } = useContext(UserContext)\n  const handleSubmit = async (e, formData) => {\n    e.preventDefault();\n    const filteredCompanies = await JoblyApi.searchForCompanies(formData.search);\n    setCompanies(filteredCompanies);\n  }\n  return (\n    <Container>\n      <SearchBar handleSubmit={handleSubmit} />\n      {companies.map(company => <CompanyCard key={company.handle} company={company} />)}\n    </Container>\n  )\n};\n\nexport default CompanyList;","import React, { useState, useEffect, useContext } from 'react';\nimport UserContext from './userContext';\nimport CompanyList from './CompanyList';\n\nconst Companies = () => {\n  const { JoblyApi } = useContext(UserContext);\n  const [hasLoaded, setHasLoaded] = useState(false);\n  const [companies, setCompanies] = useState([]);\n  useEffect(() => {\n    const getCompanies = async () => {\n      const res = await JoblyApi.getAllCompanies();\n      setCompanies(res);\n      setHasLoaded(true);\n    };\n    getCompanies()\n  }, [JoblyApi]);\n\n  return (\n    <div>\n      {hasLoaded ? (\n        <CompanyList companies={companies} setCompanies={setCompanies} /> \n      ) : <h3>Loading...</h3>}\n    </div>\n  )\n};\n\nexport default Companies;","import React, { useEffect, useState } from 'react';\nimport { Card, CardText, CardBody, CardTitle, CardSubtitle, Button } from 'reactstrap';\n\nconst JobCard = ({ job, displayCompany, applyForJob, user, setUser }) => {\n  const [hasApplied, setHasApplied] = useState(false);\n  const handleClick = async () => {\n    if (!hasApplied) {\n      const updatedUser = await applyForJob(user, job);\n      setUser(updatedUser);\n      setHasApplied(true);\n    }\n  };\n  useEffect(() => {\n    if (user) {\n      if (user.applications.includes(job.id)) {\n        setHasApplied(true);\n      }\n    }\n  },[user])\n  return (\n    <div>\n      <Card className=\"my-4\">\n        <CardBody>\n          <CardTitle tag=\"h5\">{ job.title }</CardTitle>\n          <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">Salary: { job.salary }</CardSubtitle>\n          <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">Equity: { job.equity }</CardSubtitle>\n          <CardText>\n            { displayCompany ? job.companyName : '' }\n          </CardText>\n          <div>\n            <Button onClick={handleClick} color=\"primary\" disabled={hasApplied ? true : false}>\n              {hasApplied ? 'Applied' : 'Apply'}\n            </Button>\n          </div>\n        </CardBody>\n      </Card>\n    </div>\n  );\n};\n\nexport default JobCard;","import React, { useState, useEffect, useContext } from 'react';\nimport UserContext from './userContext';\nimport { useParams } from 'react-router-dom';\nimport { Container } from 'reactstrap';\nimport JobCard from './JobCard';\n\nconst Company = () => {\n  const { JoblyApi, user, applyForJob, setUser } = useContext(UserContext);\n  const [hasLoaded, setHasLoaded] = useState(false);\n  const [company, setCompany] = useState({});\n  const { handle } = useParams()\n  useEffect(() => {\n    const getAndReload = async (companyHandle) => {\n      const res = await JoblyApi.getCompany(companyHandle);\n      setCompany(res);\n      setHasLoaded(true);\n    };\n    getAndReload(handle)\n  }, []);\n  \n  return (\n    <Container>\n      <div>\n        <h2>{company.name}</h2>\n        <p><i>{company.description}</i></p>\n      </div>\n      <div>\n        {hasLoaded ? (\n          company.jobs.map(job => <JobCard user={user} setUser={setUser} job={job} applyForJob={applyForJob} />)\n        ) : <h4>Loading...</h4>} \n      </div>\n    </Container>\n  )\n};\n\nexport default Company;","import React, { useContext } from 'react';\nimport SearchBar from './SearchBar';\nimport { Container } from 'reactstrap';\nimport JobCard from './JobCard';\n\nconst JobsList = ({ jobs, setJobs, applyForJob, user, setUser, JoblyApi }) => {\n  const handleSubmit = async (e, formData) => {\n    e.preventDefault();\n    const jobs = await JoblyApi.searchForJobs(formData.search);\n    setJobs(jobs);\n  }\n  return (\n    <Container >\n      <SearchBar handleSubmit={handleSubmit} />\n      {jobs.map(job => <JobCard \n        user={user} \n        setUser={setUser} \n        key={job.id} \n        job={job}\n        applyForJob={applyForJob} \n        displayCompany\n        />)\n      }\n    </Container>\n  )\n};\n\nexport default JobsList;","import React, { useState, useEffect, useContext } from 'react';\nimport UserContext from './userContext';\nimport JobsList from './JobsList';\n\nconst Jobs = () => {\n  const { JoblyApi, user, setUser, applyForJob } = useContext(UserContext);\n  const [hasLoaded, setHasLoaded] = useState(false);\n  const [jobs, setJobs] = useState([]);\n  useEffect(() => {\n    const getJobs = async () => {\n      const res = await JoblyApi.getAllJobs();\n      setJobs(res);\n      setHasLoaded(true);\n    };\n    getJobs()\n  }, [JoblyApi]);\n\n  return (\n    <div>\n      {hasLoaded ? (\n        <JobsList \n          jobs={jobs} \n          setJobs={setJobs} \n          applyForJob={applyForJob} \n          user={user} \n          setUser={setUser}\n          JoblyApi={JoblyApi} /> \n      ) : <h3>Loading...</h3>}\n    </div>\n  )\n};\n\nexport default Jobs;","import React, { useState, useContext, useEffect } from 'react';\nimport UserContext from './userContext';\nimport { Container, Alert, Button, Form, FormGroup, Label, Input, Col } from 'reactstrap';\nimport './EditProfileForm.css';\n\nconst EditProfileForm = () => {\n  const { user, handleUpdate } = useContext(UserContext);\n  const initialState = { \n    firstName: user ? user.firstName : '', \n    lastName: user ? user.lastName : '', \n    email: user ? user.email : '' \n  };\n  const [formData, setFormData] = useState(initialState);\n  const [showMessage, setShowMessage] = useState(false);\n  const handleChange = e => {\n    setFormData(fData => ({\n      ...fData,\n      [e.target.name]: e.target.value\n    }))\n  };\n  useEffect(() => {\n    if (user)\n    setFormData({firstName: user.firstName, lastName: user.lastName, email: user.email});\n  }, [user])\n\n  return (\n    <Container className=\"EditProfileForm\">\n      <Form onSubmit={e => handleUpdate(e, user.username, formData, setShowMessage)} className=\"EditProfileForm-form\">\n        <FormGroup row>\n          <Col sm={{size: 6, offset: 3}}>\n            <h2>Profile</h2>\n            <hr/>\n            <Label className=\"EditProfileForm-label\" for=\"username\">Username</Label>\n            {user ? <h6>{user.username}</h6> : ''}\n          </Col>\n        </FormGroup>\n        <FormGroup className=\"my-4\" row>\n          <Col sm={{size: 6, offset: 3}}>\n            <Label className=\"EditProfileForm-label\" for=\"first-name\">First name</Label>\n            <Input \n              type=\"text\" \n              name=\"firstName\" \n              value={formData.firstName} \n              id=\"first-name\"\n              onChange={handleChange} \n              placeholder=\"First name\" \n            />\n          </Col>\n        </FormGroup>\n        <FormGroup className=\"my-4\" row>\n          <Col sm={{size: 6, offset: 3}}>\n            <Label className=\"EditProfileForm-label\" for=\"last-name\">Last name</Label>\n            <Input \n              type=\"text\" \n              name=\"lastName\" \n              value={formData.lastName} \n              id=\"last-name\"\n              onChange={handleChange} \n              placeholder=\"Last name\" \n            />\n          </Col>\n        </FormGroup>\n        <FormGroup className=\"my-4\" row>\n          <Col sm={{size: 6, offset: 3}}>\n            <Label className=\"EditProfileForm-label\" for=\"email\">Email</Label>\n            <Input \n            type=\"email\" \n            name=\"email\" \n            value={formData.email} \n            id=\"email\"\n            onChange={handleChange} \n            placeholder=\"Email\" \n          />\n          </Col>\n        </FormGroup>\n        <Col sm={{size: 6, offset: 3}}>\n          {showMessage && <Alert color=\"danger\">{showMessage}</Alert>}\n        </Col>\n        <div className=\"EditProfileForm-button\">\n            <Button color=\"primary\">Submit</Button>\n        </div>\n      </Form>\n    </Container>\n  )\n};\n\nexport default EditProfileForm;","import React from 'react';\nimport EditProfileForm from './EditProfileForm';\n\nconst Profile = () => {\n  return (\n    <div>\n      <EditProfileForm />\n    </div>\n  )\n};\n\nexport default Profile;","import React, { useState, useContext } from 'react';\nimport UserContext from './userContext';\nimport './SignUpForm.css';\nimport { Container, Button, Alert, Form, FormGroup, Label, Input, Col } from 'reactstrap';\n\nconst SignUpForm = () => {\n  const [showMessage, setShowMessage] = useState(false);\n  const { handleSignUp } = useContext(UserContext);\n  const initialState = { username: '', password: '', firstName: '', lastName: '', email: '' };\n  const [formData, setFormData] = useState(initialState);\n  const handleChange = e => {\n    setFormData(fData => ({\n      ...fData,\n      [e.target.name]: e.target.value\n    }))\n  };\n\n  return (\n    <Container className=\"SignUpForm\">\n      <Form onSubmit={e => handleSignUp(e, formData, setShowMessage)} className=\"SignUpForm-form\">\n        <FormGroup row>\n          <Col sm={{size: 6, offset: 3}}>\n            <h2>Sign Up</h2>\n            <Label className=\"SignUpForm-label\" for=\"username\">Username</Label>\n            <Input \n              type=\"text\" \n              name=\"username\" \n              value={formData.username} \n              id=\"username\"\n              onChange={handleChange} \n              placeholder=\"Username\" \n            />\n          </Col>\n        </FormGroup>\n        <FormGroup className=\"my-4\" row>\n          <Col sm={{size: 6, offset: 3}}>\n            <Label className=\"SignUpForm-label\" for=\"password\">Password</Label>\n            <Input \n              type=\"password\" \n              name=\"password\" \n              value={formData.password} \n              id=\"password\"\n              onChange={handleChange} \n              placeholder=\"Password\" \n            />\n          </Col>\n        </FormGroup>\n        <FormGroup className=\"my-4\" row>\n          <Col sm={{size: 6, offset: 3}}>\n            <Label className=\"SignUpForm-label\" for=\"first-name\">First name</Label>\n            <Input \n              type=\"text\" \n              name=\"firstName\" \n              value={formData.firstName} \n              id=\"first-name\"\n              onChange={handleChange} \n              placeholder=\"First name\" \n            />\n          </Col>\n        </FormGroup>\n        <FormGroup className=\"my-4\" row>\n          <Col sm={{size: 6, offset: 3}}>\n            <Label className=\"SignUpForm-label\" for=\"last-name\">Last name</Label>\n            <Input \n              type=\"text\" \n              name=\"lastName\" \n              value={formData.lastName} \n              id=\"last-name\"\n              onChange={handleChange} \n              placeholder=\"Last name\" \n            />\n          </Col>\n        </FormGroup>\n        <FormGroup className=\"my-4\" row>\n          <Col sm={{size: 6, offset: 3}}>\n            <Label className=\"SignUpForm-label\" for=\"email\">Email</Label>\n            <Input \n            type=\"email\" \n            name=\"email\" \n            value={formData.email} \n            id=\"email\"\n            onChange={handleChange} \n            placeholder=\"Email\" \n          />\n          </Col>\n        </FormGroup>\n        <Col sm={{size: 6, offset: 3}}>\n          {showMessage && <Alert color=\"danger\">{showMessage}</Alert>}\n        </Col>\n        <div className=\"SignUpForm-button\">\n            <Button color=\"primary\">Submit</Button>\n        </div>\n      </Form>\n    </Container>\n  )\n};\n\nexport default SignUpForm;\n","import React from 'react';\nimport SignUpForm from './SignUpForm';\n\nconst SignUp = () => {\n  return (\n    <div style={{height: '100%'}}>\n      <SignUpForm />\n    </div>\n  )\n};\n\nexport default SignUp;\n","import React, { useContext, useState } from 'react';\nimport UserContext from './userContext';\nimport './LoginForm.css';\nimport { Container, Button, Alert, Form, FormGroup, Label, Input, Col } from 'reactstrap';\n\nconst LoginForm = () => {\n  const [showMessage, setShowMessage] = useState(false);\n  const { handleLogin } = useContext(UserContext);\n  const initialState = { username: '', password: ''};\n  const [formData, setFormData] = useState(initialState);\n  const handleChange = e => {\n    setFormData(fData => ({\n      ...fData,\n      [e.target.name]: e.target.value\n    }))\n  };\n  \n  return (\n    <Container className=\"LoginForm\">\n      <Form onSubmit={e => handleLogin(e, formData, setShowMessage)} className=\"LoginForm-form\">\n        <FormGroup row>\n          <Col sm={{size: 6, offset: 3}}>\n            <h2>Log In</h2>\n            <Label className=\"LoginForm-label\" for=\"username\">Username</Label>\n            <Input \n              type=\"text\" \n              name=\"username\" \n              id=\"username\" \n              value={formData.username} \n              onChange={handleChange} \n              placeholder=\"Username\" \n            />\n          </Col>\n        </FormGroup>\n        <FormGroup className=\"my-4\" row>\n          <Col sm={{size: 6, offset: 3}}>\n            <Label className=\"LoginForm-label\" for=\"password\">Password</Label>\n            <Input \n              type=\"password\" \n              name=\"password\" \n              id=\"password\" \n              value={formData.password} \n              onChange={handleChange} \n              placeholder=\"Password\" \n            />\n          </Col>\n        </FormGroup>\n        <Col sm={{size: 6, offset: 3}} className=\"LoginForm-alert\">\n          {showMessage && <Alert color=\"danger\">{showMessage}</Alert>}\n        </Col>\n        <div className=\"LoginForm-button\">\n          <Button color=\"primary\">Submit</Button>\n        </div>\n      </Form>\n    </Container>\n  )\n};\n\nexport default LoginForm;\n","import React from 'react';\nimport LoginForm from './LoginForm';\n\nconst Login = () => {\n  return (\n    <div style={{height: '100%'}}>\n      <LoginForm />\n    </div>\n  )\n};\n\nexport default Login;","import React, { useContext } from 'react';\nimport UserContext from './userContext';\nimport { Redirect } from 'react-router-dom';\n\nconst Logout = () => {\n  let { tokenFromLogin, setTokenFromLogin, tokenFromSignUp, setTokenFromSignUp, setTFLS } = useContext(UserContext);\n\n  localStorage.clear();\n  setTFLS(null);\n\n  if (tokenFromLogin) {\n    setTokenFromLogin(null);\n  }\n  else if (tokenFromSignUp) {\n    setTokenFromSignUp(null);\n  }\n\n  return <Redirect to=\"/\" />\n};\n\nexport default Logout;","import React, { useState, useContext } from 'react';\nimport UserContext from './userContext';\nimport { NavLink as RRNavLink } from 'react-router-dom';\nimport './NavBar.css'\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n} from 'reactstrap';\n\nconst NavBar = (props) => {\n  const { user } = useContext(UserContext);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  return (\n    <div className=\"NavBar\">\n      <Navbar className=\"shadow-sm mb-2\" color=\"light\" expand=\"md\">\n        <NavbarBrand color=\"primary\">\n          <NavLink tag={RRNavLink} exact to=\"/\">Jobly</NavLink>\n        </NavbarBrand>\n        <NavbarToggler onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"ms-auto\">\n            {user && (\n              <>\n                <NavItem>\n                  <NavLink tag={RRNavLink} to=\"/companies\">Companies</NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink tag={RRNavLink} exact to=\"/jobs\">Jobs</NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink tag={RRNavLink} exact to=\"/profile\">Profile</NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink tag={RRNavLink} exact to=\"/logout\">Log out {user.firstName}</NavLink>\n                </NavItem>\n              </>\n            )}\n            {!user && (\n              <>\n                <NavItem>\n                  <NavLink tag={RRNavLink} exact to=\"/signup\">Sign Up</NavLink>\n                </NavItem>\n                <NavItem className=\"me-3\">\n                  <NavLink tag={RRNavLink} exact to=\"/login\">Login</NavLink>\n                </NavItem>\n              </>\n            )}\n          </Nav>\n        </Collapse>\n      </Navbar>\n    </div>\n  );\n}\n\nexport default NavBar;","import React from 'react';\nimport useIsLoggedIn from './hooks/useIsLoggedIn';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport Homepage from './Homepage';\nimport Companies from './Companies';\nimport Company from './Company';\nimport Jobs from './Jobs';\nimport Profile from './Profile';\nimport SignUp from './SignUp';\nimport Login from './Login';\nimport Logout from './Logout';\nimport NavBar from './NavBar';\n\nconst Routes = () => {\n  const isLoggedIn = useIsLoggedIn();\n  return (\n    <div style={{height: '100%'}}>\n      <NavBar />\n      <Switch>\n        <Route exact path=\"/\">\n          <Homepage />\n        </Route>\n        <Route exact path=\"/companies\">\n          {isLoggedIn ? <Companies /> : <Redirect to=\"/login\" />}\n        </Route>\n        <Route exact path=\"/companies/:handle\">\n          {isLoggedIn ? <Company /> : <Redirect to=\"/login\" />}\n        </Route>\n        <Route exact path=\"/jobs\">\n          {isLoggedIn ? <Jobs /> : <Redirect to=\"/login\" />}\n        </Route>\n        <Route exact path=\"/profile\">\n          {isLoggedIn ? <Profile /> : <Redirect to=\"/login\" />}\n        </Route>\n        <Route exact path=\"/signup\">\n          <SignUp />\n        </Route>\n        <Route exact path=\"/login\">\n          <Login />\n        </Route>\n        <Route exact path=\"/logout\">\n          <Logout />\n        </Route>\n      </Switch>\n    </div>\n  )\n};\n\nexport default Routes;","import { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nconst useSignUp = (JoblyApi) => {\n  const history = useHistory();\n  const [token, setToken] = useState();\n  const handleSignUp = async (e, formData, setShowMessage) => {\n    try {\n      e.preventDefault();\n      console.log(formData);\n      const respToken = await JoblyApi.signUp(formData);\n      JoblyApi.token = respToken;\n      setToken(respToken);\n      history.push('/');\n    }\n    catch(err) {\n      let errors = err.map(message => <p>{message}</p>);\n      setShowMessage(errors);\n    }\n  };\n  return [token, setToken, handleSignUp];\n};\n\nexport default useSignUp;","import { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nconst useLogin = (JoblyApi) => {\n  const history = useHistory();\n  const [token, setToken] = useState();\n  const handleLogin = async (e, formData, setShowMessage) => {\n    try {\n      e.preventDefault();\n      const respToken = await JoblyApi.login(formData);\n      JoblyApi.token = respToken;\n      setToken(respToken);\n      history.push('/')\n    }\n    catch(err) {\n      setShowMessage(\n        'Invalid username/password'\n      )\n    }\n  };\n\n  return [token, setToken, handleLogin];\n};\n\nexport default useLogin;","import { useState, useEffect } from 'react';\n\nconst useGetUser = (tokenFromLogin, tokenFromSignUp, tokenFromLocalStorage, JoblyApi) => {\n  const [user, setUser] = useState();\n\n  useEffect(() => {\n    const getInformation = async () => {\n      if (!(tokenFromLocalStorage || tokenFromLogin || tokenFromSignUp)) {\n        if (user) setUser(null);\n        return;\n      }\n      else {\n        const userResp = await JoblyApi.getUser(tokenFromLocalStorage || tokenFromSignUp || tokenFromLogin);\n        setUser(userResp);\n      }\n    };\n    getInformation();\n  }, [tokenFromLogin, tokenFromSignUp, tokenFromLocalStorage, JoblyApi]);\n\n  return [user, setUser, JoblyApi];\n};\n\nexport default useGetUser;","import axios from \"axios\";\nimport jwt from \"jsonwebtoken\";\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL || \"http://localhost:3001\";\n\n/** API Class.\n *\n * Static class tying together methods used to get/send to the API.\n * There shouldn't be any frontend-specific stuff here, and there shouldn't\n * be any API-aware stuff elsewhere in the frontend.\n *\n */\n\nclass JoblyApi {\n  // the token for interactive with the API will be stored here.\n  static token;\n\n  static async request(endpoint, data = {}, method = \"get\") {\n    console.debug(\"API Call:\", endpoint, data, method);\n\n    //there are multiple ways to pass an authorization token, this is how you pass it in the header.\n    //this has been provided to show you another way to pass the token. you are only expected to read this code for this project.\n    const url = `${BASE_URL}/${endpoint}`;\n    const headers = { Authorization: `Bearer ${JoblyApi.token}` };\n    const params = (method === \"get\")\n        ? data\n        : {};\n\n    try {\n      return (await axios({ url, method, data, params, headers })).data;\n    } catch (err) {\n      console.error(\"API Error:\", err.response);\n      let message = err.response.data.error.message;\n      throw Array.isArray(message) ? message : [message];\n    }\n  }\n\n  // Individual API routes\n\n  /** Get details on a company by handle. */\n\n  static async getCompany(handle) {\n    let res = await this.request(`companies/${handle}`);\n    return res.company;\n  }\n\n  static async getAllCompanies() {\n    let res = await this.request('companies');\n    return res.companies;\n  }\n\n  static async searchForCompanies(name) {\n    if (name.trim().length === 0) {\n      return this.getAllCompanies();\n    }\n    else {\n      let res = await this.request(`companies`, { name })\n      return res.companies;\n    }\n  }\n\n  static async getAllJobs() {\n    let res = await this.request('jobs');\n    return res.jobs;\n  }\n\n  static async searchForJobs(title) {\n    if (title.trim().length === 0) {\n      return this.getAllJobs();\n    }\n    else {\n      let res = await this.request(`jobs`, { title })\n      return res.jobs;\n    }\n  }\n\n  static async signUp(userData) {\n    const res = await this.request('auth/register', userData, 'post');\n    return res.token;\n  }\n\n  static async login(userData) {\n    const res = await this.request('auth/token', userData, 'post');\n    return res.token;\n  }\n\n  static async getUser(token) {\n    let username = jwt.decode(token).username;\n    let res = await this.request(`users/${username}`);\n    return res.user;\n  }\n\n  static async updateUser(username, userData) {\n    await this.request(`users/${username}`, userData, 'patch');\n    let user = await this.getUser(JoblyApi.token);\n    return user;\n  }\n\n  static async applyForJob(username, jobId) {\n    await this.request(`users/${username}/jobs/${jobId}`, {}, \"post\");\n    let user = await this.getUser(JoblyApi.token);\n    return user;\n  }\n  \n}\n\nexport default JoblyApi;\n","import { useHistory } from 'react-router-dom';\nimport JoblyApi from '../api';\n\nconst useUserUpdate = (setUser) => {\n  const history = useHistory();\n  const handleUpdate = async (e, username, formData, setShowMessage) => {\n    try {\n      e.preventDefault();\n      setUser(await JoblyApi.updateUser(username, formData));\n      history.push('/');\n    }\n    catch(err) {\n      console.log(err)\n      let errors = err.map(message => <p>{message}</p>);\n      setShowMessage(errors);\n    }\n  };\n\n  return handleUpdate;\n};\n\nexport default useUserUpdate;","import { useState, useEffect } from 'react';\n\nconst useLocalStorage = (key, tokenFromLogin, tokenFromSignUp, JoblyApi) => {\n  const [state, setState] = useState(() => {\n    try {\n      if (JSON.parse(window.localStorage.getItem(key))) {\n        const { token } = JSON.parse(window.localStorage.getItem(key))\n        return token;\n      }\n    }\n    catch(e) {\n      alert('Local storage realized an error!');\n    }\n  });\n  useEffect(() => {\n    if (state) {\n      window.localStorage.setItem(key, `{\"token\": \"${state}\"}`);\n      JoblyApi.token = state;\n    }\n    else if (tokenFromLogin) {\n      window.localStorage.setItem(key, `{\"token\": \"${tokenFromLogin}\"}`);\n      setState(tokenFromLogin);\n    }\n    else if (tokenFromSignUp) {\n      window.localStorage.setItem(key, `{\"token\": \"${tokenFromSignUp}\"}`);\n      setState(tokenFromSignUp);\n    }\n    else {\n      window.localStorage.setItem(key, `{\"token\": null}`);\n    }\n  }, [state, tokenFromLogin, tokenFromSignUp, JoblyApi, key]);\n  return [state, setState];\n};\n\nexport default useLocalStorage;","import JoblyApi from '../api';\n\nconst useApplyForJob = () => {\n  const applyForJob = async (user, job) => {\n    const { username } = user;\n    const { id } = job;\n\n    let res = await JoblyApi.applyForJob(username, id);\n    return res;\n  };\n\n  return applyForJob;\n};\n\nexport default useApplyForJob;","import React from 'react';\nimport './App.css';\nimport Routes from './Routes';\nimport UserContext from './userContext';\nimport useSignUp from './hooks/useSignUp';\nimport useLogin from './hooks/useLogin';\nimport useGetUser from './hooks/useGetUser';\nimport useUserUpdate from './hooks/useUserUpdate';\nimport useLocalStorage from './hooks/useLocalStorage';\nimport useApplyForJob from './hooks/useApplyForJob';\nimport JoblyApi from './api';\n\nfunction App() {\n  const [tokenFromSignUp, setTokenFromSignUp, handleSignUp] = useSignUp(JoblyApi);\n  const [tokenFromLogin, setTokenFromLogin, handleLogin] = useLogin(JoblyApi);\n  const [tokenFromLocalStorage, setTFLS] = useLocalStorage('token', tokenFromLogin, tokenFromSignUp, JoblyApi);\n  const [user, setUser] = useGetUser(tokenFromLogin, tokenFromSignUp, tokenFromLocalStorage, JoblyApi);\n  const applyForJob = useApplyForJob();\n  const handleUpdate = useUserUpdate(setUser);\n\n  return (\n    <div className=\"App\">\n      <UserContext.Provider value={{\n          user, \n          setUser,\n          JoblyApi, \n          tokenFromSignUp, \n          setTokenFromSignUp, \n          handleSignUp, \n          tokenFromLogin, \n          setTokenFromLogin, \n          handleLogin,\n          handleUpdate,\n          applyForJob,\n          setTFLS\n        }}\n      >\n        <Routes />\n      </UserContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}