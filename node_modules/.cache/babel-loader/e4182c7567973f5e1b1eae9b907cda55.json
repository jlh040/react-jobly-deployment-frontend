{"ast":null,"code":"var _jsxFileName = \"/Users/jeffhall/Desktop/Software Engineering Career Track/Section_IV/Exercises/Unit_43_react_jobly/react-jobly/frontend/src/Company.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport JoblyApi from './api';\nimport JobCard from './JobCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Company = () => {\n  _s();\n\n  let name;\n  let description;\n  let jobs;\n  const [hasLoaded, setHasLoaded] = useState(false);\n  const [company, setCompany] = useState({});\n  const {\n    handle\n  } = useParams();\n  useEffect(() => {\n    const getAndReload = async companyHandle => {\n      const res = await JoblyApi.getCompany(companyHandle);\n      ({\n        name,\n        description,\n        jobs\n      } = res);\n      setCompany(res);\n      setHasLoaded(true);\n    };\n\n    getAndReload(handle);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Company page!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), hasLoaded ? /*#__PURE__*/_jsxDEV(JobCard, {\n      name: name,\n      description: description,\n      jobs: jobs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Company, \"rxJKDiggc3WzcF3LsQ4l7j/1Wdg=\", false, function () {\n  return [useParams];\n});\n\n_c = Company;\nexport default Company;\n\nvar _c;\n\n$RefreshReg$(_c, \"Company\");","map":{"version":3,"sources":["/Users/jeffhall/Desktop/Software Engineering Career Track/Section_IV/Exercises/Unit_43_react_jobly/react-jobly/frontend/src/Company.js"],"names":["React","useState","useEffect","useParams","JoblyApi","JobCard","Company","name","description","jobs","hasLoaded","setHasLoaded","company","setCompany","handle","getAndReload","companyHandle","res","getCompany"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,QAAP,MAAqB,OAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,MAAIC,IAAJ;AACA,MAAIC,WAAJ;AACA,MAAIC,IAAJ;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM;AAAEa,IAAAA;AAAF,MAAaX,SAAS,EAA5B;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,YAAY,GAAG,MAAOC,aAAP,IAAyB;AAC5C,YAAMC,GAAG,GAAG,MAAMb,QAAQ,CAACc,UAAT,CAAoBF,aAApB,CAAlB;AACA,OAAC;AAAET,QAAAA,IAAF;AAAQC,QAAAA,WAAR;AAAqBC,QAAAA;AAArB,UAA8BQ,GAA/B;AACAJ,MAAAA,UAAU,CAACI,GAAD,CAAV;AACAN,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,KALD;;AAMAI,IAAAA,YAAY,CAACD,MAAD,CAAZ;AACD,GARQ,CAAT;AAUA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGJ,SAAS,gBACR,QAAC,OAAD;AAAS,MAAA,IAAI,EAAEH,IAAf;AAAqB,MAAA,WAAW,EAAEC,WAAlC;AAA+C,MAAA,IAAI,EAAEC;AAArD;AAAA;AAAA;AAAA;AAAA,YADQ,gBAEN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAzBD;;GAAMH,O;UAMeH,S;;;KANfG,O;AA2BN,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport JoblyApi from './api';\nimport JobCard from './JobCard';\n\nconst Company = () => {\n  let name;\n  let description;\n  let jobs;\n  const [hasLoaded, setHasLoaded] = useState(false);\n  const [company, setCompany] = useState({});\n  const { handle } = useParams()\n  useEffect(() => {\n    const getAndReload = async (companyHandle) => {\n      const res = await JoblyApi.getCompany(companyHandle);\n      ({ name, description, jobs } = res)\n      setCompany(res);\n      setHasLoaded(true);\n    };\n    getAndReload(handle)\n  });\n  \n  return (\n    <div>\n      <h1>Company page!</h1>\n      {hasLoaded ? (\n        <JobCard name={name} description={description} jobs={jobs} />\n      ) : <h4>Loading...</h4>} \n    </div>\n  )\n};\n\nexport default Company;"]},"metadata":{},"sourceType":"module"}