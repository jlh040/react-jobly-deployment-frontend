{"ast":null,"code":"var _jsxFileName = \"/Users/jeffhall/Desktop/Software Engineering Career Track/Section_IV/Exercises/Unit_43_react_jobly/react-jobly/frontend/src/JobCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport useApplyForJob from './hooks/useApplyForJob';\nimport { Card, CardText, CardBody, CardTitle, CardSubtitle, Button } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst JobCard = ({\n  user,\n  setUser,\n  job,\n  displayCompany\n}) => {\n  _s();\n\n  const applications = user ? user.applications : null;\n  const applyForJob = useApplyForJob();\n  const [hasApplied, setHasApplied] = useState(applications.includes(job.id));\n\n  const handleClick = async () => {\n    if (!hasApplied) {\n      await applyForJob(user, job);\n      setHasApplied(true);\n      setUser(currUser => ({ ...currUser\n      }));\n    }\n  };\n\n  useEffect(() => {\n    if (user && user.applications.includes(job.id)) {\n      setHasApplied(true);\n      setUser(currUser => ({ ...currUser\n      }));\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"my-4\",\n      children: /*#__PURE__*/_jsxDEV(CardBody, {\n        children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n          tag: \"h5\",\n          children: job.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardSubtitle, {\n          tag: \"h6\",\n          className: \"mb-2 text-muted\",\n          children: [\"Salary: \", job.salary]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardSubtitle, {\n          tag: \"h6\",\n          className: \"mb-2 text-muted\",\n          children: [\"Equity: \", job.equity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardText, {\n          children: displayCompany ? job.companyName : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleClick,\n            color: \"primary\",\n            children: hasApplied ? 'Applied' : 'Apply'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(JobCard, \"YlSDXpFxZ0hLx80QCJudOVJJubA=\", false, function () {\n  return [useApplyForJob];\n});\n\n_c = JobCard;\nexport default JobCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"JobCard\");","map":{"version":3,"sources":["/Users/jeffhall/Desktop/Software Engineering Career Track/Section_IV/Exercises/Unit_43_react_jobly/react-jobly/frontend/src/JobCard.js"],"names":["React","useEffect","useState","useApplyForJob","Card","CardText","CardBody","CardTitle","CardSubtitle","Button","JobCard","user","setUser","job","displayCompany","applications","applyForJob","hasApplied","setHasApplied","includes","id","handleClick","currUser","title","salary","equity","companyName"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,QAAzB,EAAmCC,SAAnC,EAA8CC,YAA9C,EAA4DC,MAA5D,QAA0E,YAA1E;;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,OAAR;AAAiBC,EAAAA,GAAjB;AAAsBC,EAAAA;AAAtB,CAAD,KAA4C;AAAA;;AAC1D,QAAMC,YAAY,GAAGJ,IAAI,GAAGA,IAAI,CAACI,YAAR,GAAuB,IAAhD;AACA,QAAMC,WAAW,GAAGb,cAAc,EAAlC;AACA,QAAM,CAACc,UAAD,EAAaC,aAAb,IAA8BhB,QAAQ,CAACa,YAAY,CAACI,QAAb,CAAsBN,GAAG,CAACO,EAA1B,CAAD,CAA5C;;AACA,QAAMC,WAAW,GAAG,YAAY;AAC9B,QAAI,CAACJ,UAAL,EAAiB;AACf,YAAMD,WAAW,CAACL,IAAD,EAAOE,GAAP,CAAjB;AACAK,MAAAA,aAAa,CAAC,IAAD,CAAb;AACAN,MAAAA,OAAO,CAACU,QAAQ,KAAK,EAAC,GAAGA;AAAJ,OAAL,CAAT,CAAP;AACD;AACF,GAND;;AAOArB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIU,IAAI,IAAIA,IAAI,CAACI,YAAL,CAAkBI,QAAlB,CAA2BN,GAAG,CAACO,EAA/B,CAAZ,EAAgD;AAC9CF,MAAAA,aAAa,CAAC,IAAD,CAAb;AACAN,MAAAA,OAAO,CAACU,QAAQ,KAAK,EAAC,GAAGA;AAAJ,OAAL,CAAT,CAAP;AACD;AACF,GALQ,EAKP,EALO,CAAT;AAMA,sBACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA,6BACE,QAAC,QAAD;AAAA,gCACE,QAAC,SAAD;AAAW,UAAA,GAAG,EAAC,IAAf;AAAA,oBAAsBT,GAAG,CAACU;AAA1B;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,YAAD;AAAc,UAAA,GAAG,EAAC,IAAlB;AAAuB,UAAA,SAAS,EAAC,iBAAjC;AAAA,iCAA6DV,GAAG,CAACW,MAAjE;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,YAAD;AAAc,UAAA,GAAG,EAAC,IAAlB;AAAuB,UAAA,SAAS,EAAC,iBAAjC;AAAA,iCAA6DX,GAAG,CAACY,MAAjE;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE,QAAC,QAAD;AAAA,oBACIX,cAAc,GAAGD,GAAG,CAACa,WAAP,GAAqB;AADvC;AAAA;AAAA;AAAA;AAAA,gBAJF,eAOE;AAAA,iCACE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAEL,WAAjB;AAA8B,YAAA,KAAK,EAAC,SAApC;AAAA,sBAA+CJ,UAAU,GAAG,SAAH,GAAe;AAAxE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAlCD;;GAAMP,O;UAEgBP,c;;;KAFhBO,O;AAoCN,eAAeA,OAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport useApplyForJob from './hooks/useApplyForJob';\nimport { Card, CardText, CardBody, CardTitle, CardSubtitle, Button } from 'reactstrap';\n\nconst JobCard = ({ user, setUser, job, displayCompany }) => {\n  const applications = user ? user.applications : null;\n  const applyForJob = useApplyForJob();\n  const [hasApplied, setHasApplied] = useState(applications.includes(job.id));\n  const handleClick = async () => {\n    if (!hasApplied) {\n      await applyForJob(user, job);\n      setHasApplied(true);\n      setUser(currUser => ({...currUser}));\n    }\n  };\n  useEffect(() => {\n    if (user && user.applications.includes(job.id)) {\n      setHasApplied(true);\n      setUser(currUser => ({...currUser}));\n    }\n  },[])\n  return (\n    <div>\n      <Card className=\"my-4\">\n        <CardBody>\n          <CardTitle tag=\"h5\">{ job.title }</CardTitle>\n          <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">Salary: { job.salary }</CardSubtitle>\n          <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">Equity: { job.equity }</CardSubtitle>\n          <CardText>\n            { displayCompany ? job.companyName : '' }\n          </CardText>\n          <div>\n            <Button onClick={handleClick} color=\"primary\">{hasApplied ? 'Applied' : 'Apply'}</Button>\n          </div>\n        </CardBody>\n      </Card>\n    </div>\n  );\n};\n\nexport default JobCard;"]},"metadata":{},"sourceType":"module"}