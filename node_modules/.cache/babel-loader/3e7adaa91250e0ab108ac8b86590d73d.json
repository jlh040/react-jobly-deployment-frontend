{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport JoblyApi from '../api';\n\nconst useAuthentication = action => {\n  _s();\n\n  const [token, setToken] = useState();\n  let handleSignUp = null;\n  let handleLogin = null;\n\n  if (action === 'signup') {\n    handleSignUp = async (e, formData) => {\n      e.preventDefault();\n      const respToken = await JoblyApi.signUp(formData);\n      setToken(respToken);\n    };\n  } else if (action === 'login') {\n    handleLogin = (e, formData) => {\n      e.prevent;\n    };\n  }\n\n  return [token, handleSignUp];\n};\n\n_s(useAuthentication, \"2b1Gw51qdmmjpiYzw8hh0YVh/kM=\");\n\nexport default useSignUp;","map":{"version":3,"sources":["/Users/jeffhall/Desktop/Software Engineering Career Track/Section_IV/Exercises/Unit_43_react_jobly/react-jobly/frontend/src/hooks/useAuthentication.js"],"names":["useState","JoblyApi","useAuthentication","action","token","setToken","handleSignUp","handleLogin","e","formData","preventDefault","respToken","signUp","prevent","useSignUp"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,QAAP,MAAqB,QAArB;;AAEA,MAAMC,iBAAiB,GAAIC,MAAD,IAAY;AAAA;;AACpC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,EAAlC;AACA,MAAIM,YAAY,GAAG,IAAnB;AACA,MAAIC,WAAW,GAAG,IAAlB;;AACA,MAAIJ,MAAM,KAAK,QAAf,EAAyB;AACvBG,IAAAA,YAAY,GAAG,OAAOE,CAAP,EAAUC,QAAV,KAAuB;AACpCD,MAAAA,CAAC,CAACE,cAAF;AACA,YAAMC,SAAS,GAAG,MAAMV,QAAQ,CAACW,MAAT,CAAgBH,QAAhB,CAAxB;AACAJ,MAAAA,QAAQ,CAACM,SAAD,CAAR;AACD,KAJD;AAKD,GAND,MAOK,IAAIR,MAAM,KAAK,OAAf,EAAwB;AAC3BI,IAAAA,WAAW,GAAG,CAACC,CAAD,EAAIC,QAAJ,KAAiB;AAC7BD,MAAAA,CAAC,CAACK,OAAF;AACD,KAFD;AAGD;;AAGD,SAAO,CAACT,KAAD,EAAQE,YAAR,CAAP;AACD,CAnBD;;GAAMJ,iB;;AAqBN,eAAeY,SAAf","sourcesContent":["import { useState } from 'react';\nimport JoblyApi from '../api';\n\nconst useAuthentication = (action) => {\n  const [token, setToken] = useState();\n  let handleSignUp = null;\n  let handleLogin = null;\n  if (action === 'signup') {\n    handleSignUp = async (e, formData) => {\n      e.preventDefault();\n      const respToken = await JoblyApi.signUp(formData);\n      setToken(respToken);\n    };\n  }\n  else if (action === 'login') {\n    handleLogin = (e, formData) => {\n      e.prevent\n    }\n  }\n  \n\n  return [token, handleSignUp];\n};\n\nexport default useSignUp;"]},"metadata":{},"sourceType":"module"}