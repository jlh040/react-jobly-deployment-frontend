{"ast":null,"code":"var _jsxFileName = \"/Users/jeffhall/Desktop/Software Engineering Career Track/Section_IV/Exercises/Unit_43_react_jobly/react-jobly/frontend/src/Company.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport UserContext from './userContext';\nimport { useParams } from 'react-router-dom';\nimport { Container } from 'reactstrap';\nimport JobCard from './JobCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Company = () => {\n  _s();\n\n  const {\n    JoblyApi,\n    user,\n    applyForJob,\n    setUser\n  } = useContext(UserContext);\n  const [hasLoaded, setHasLoaded] = useState(false);\n  const [company, setCompany] = useState({});\n  const {\n    handle\n  } = useParams();\n  useEffect(() => {\n    const getAndReload = async companyHandle => {\n      const res = await JoblyApi.getCompany(companyHandle);\n      setCompany(res);\n      setHasLoaded(true);\n    };\n\n    getAndReload(handle);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: company.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          children: company.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: hasLoaded ? company.jobs.map(job => /*#__PURE__*/_jsxDEV(JobCard, {\n        user: user,\n        job: job\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 35\n      }, this)) : /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Company, \"ezv+mlZiCz3d547WdrVX2xUPV9I=\", false, function () {\n  return [useParams];\n});\n\n_c = Company;\nexport default Company;\n\nvar _c;\n\n$RefreshReg$(_c, \"Company\");","map":{"version":3,"sources":["/Users/jeffhall/Desktop/Software Engineering Career Track/Section_IV/Exercises/Unit_43_react_jobly/react-jobly/frontend/src/Company.js"],"names":["React","useState","useEffect","useContext","UserContext","useParams","Container","JobCard","Company","JoblyApi","user","applyForJob","setUser","hasLoaded","setHasLoaded","company","setCompany","handle","getAndReload","companyHandle","res","getCompany","name","description","jobs","map","job"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,IAAZ;AAAkBC,IAAAA,WAAlB;AAA+BC,IAAAA;AAA/B,MAA2CT,UAAU,CAACC,WAAD,CAA3D;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM;AAAEgB,IAAAA;AAAF,MAAaZ,SAAS,EAA5B;AACAH,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMgB,YAAY,GAAG,MAAOC,aAAP,IAAyB;AAC5C,YAAMC,GAAG,GAAG,MAAMX,QAAQ,CAACY,UAAT,CAAoBF,aAApB,CAAlB;AACAH,MAAAA,UAAU,CAACI,GAAD,CAAV;AACAN,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,KAJD;;AAKAI,IAAAA,YAAY,CAACD,MAAD,CAAZ;AACD,GAPQ,EAON,EAPM,CAAT;AASA,sBACE,QAAC,SAAD;AAAA,4BACE;AAAA,8BACE;AAAA,kBAAKF,OAAO,CAACO;AAAb;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,+BAAG;AAAA,oBAAIP,OAAO,CAACQ;AAAZ;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAA,gBACGV,SAAS,GACRE,OAAO,CAACS,IAAR,CAAaC,GAAb,CAAiBC,GAAG,iBAAI,QAAC,OAAD;AAAS,QAAA,IAAI,EAAEhB,IAAf;AAAqB,QAAA,GAAG,EAAEgB;AAA1B;AAAA;AAAA;AAAA;AAAA,cAAxB,CADQ,gBAEN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHN;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CA3BD;;GAAMlB,O;UAIeH,S;;;KAJfG,O;AA6BN,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport UserContext from './userContext';\nimport { useParams } from 'react-router-dom';\nimport { Container } from 'reactstrap';\nimport JobCard from './JobCard';\n\nconst Company = () => {\n  const { JoblyApi, user, applyForJob, setUser } = useContext(UserContext);\n  const [hasLoaded, setHasLoaded] = useState(false);\n  const [company, setCompany] = useState({});\n  const { handle } = useParams()\n  useEffect(() => {\n    const getAndReload = async (companyHandle) => {\n      const res = await JoblyApi.getCompany(companyHandle);\n      setCompany(res);\n      setHasLoaded(true);\n    };\n    getAndReload(handle)\n  }, []);\n  \n  return (\n    <Container>\n      <div>\n        <h2>{company.name}</h2>\n        <p><i>{company.description}</i></p>\n      </div>\n      <div>\n        {hasLoaded ? (\n          company.jobs.map(job => <JobCard user={user} job={job} />)\n        ) : <h4>Loading...</h4>} \n      </div>\n    </Container>\n  )\n};\n\nexport default Company;"]},"metadata":{},"sourceType":"module"}