{"ast":null,"code":"import axios from \"axios\";\nconst BASE_URL = process.env.REACT_APP_BASE_URL || \"http://localhost:3001\";\n/** API Class.\n *\n * Static class tying together methods used to get/send to the API.\n * There shouldn't be any frontend-specific stuff here, and there shouldn't\n * be any API-aware stuff elsewhere in the frontend.\n *\n */\n\nclass JoblyApi {\n  // the token for interactive with the API will be stored here.\n  static async request(endpoint, data = {}, method = \"get\") {\n    console.debug(\"API Call:\", endpoint, data, method); //there are multiple ways to pass an authorization token, this is how you pass it in the header.\n    //this has been provided to show you another way to pass the token. you are only expected to read this code for this project.\n\n    const url = `${BASE_URL}/${endpoint}`;\n    const headers = {\n      Authorization: `Bearer ${JoblyApi.token}`\n    };\n    const params = method === \"get\" ? data : {};\n\n    try {\n      return (await axios({\n        url,\n        method,\n        data,\n        params,\n        headers\n      })).data;\n    } catch (err) {\n      console.error(\"API Error:\", err.response);\n      let message = err.response.data.error.message;\n      throw Array.isArray(message) ? message : [message];\n    }\n  } // Individual API routes\n\n  /** Get details on a company by handle. */\n\n\n  static async getCompany(handle) {\n    let res = await this.request(`companies/${handle}`);\n    return res.company;\n  }\n\n  static async getAllCompanies() {\n    let res = await this.request('companies');\n    return res.companies;\n  }\n\n  static async searchForCompanies(name) {\n    if (name.trim().length === 0) {\n      return this.getAllCompanies();\n    } else {\n      let res = await this.request(`companies`, {\n        name\n      });\n      return res.companies;\n    }\n  }\n\n  static async getAllJobs() {\n    let res = await this.request('jobs');\n    return res.jobs;\n  }\n\n  static async searchForJobs(title) {\n    if (title.trim().length === 0) {\n      return this.getAllJobs();\n    } else {\n      let res = await this.request(`jobs`, {\n        title\n      });\n      return res.jobs;\n    }\n  }\n\n  static async signUp(userData) {\n    userData.firstName = userData['first-name'];\n    userData.lastName = userData['last-name'];\n    delete userData['first-name'];\n    delete userData['last-name'];\n    const res = await this.request('auth/register', userData, 'post');\n    return res.token;\n  } // obviously, you'll add a lot here ...\n\n\n} // for now, put token (\"testuser\" / \"password\" on class)\n\n\nJoblyApi.token = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZ\" + \"SI6InRlc3R1c2VyIiwiaXNBZG1pbiI6ZmFsc2UsImlhdCI6MTU5ODE1OTI1OX0.\" + \"FtrMwBQwe6Ue-glIFgz_Nf8XxRT2YecFCiSpYL0fCXc\";\nexport default JoblyApi;","map":{"version":3,"sources":["/Users/jeffhall/Desktop/Software Engineering Career Track/Section_IV/Exercises/Unit_43_react_jobly/react-jobly/frontend/src/api.js"],"names":["axios","BASE_URL","process","env","REACT_APP_BASE_URL","JoblyApi","request","endpoint","data","method","console","debug","url","headers","Authorization","token","params","err","error","response","message","Array","isArray","getCompany","handle","res","company","getAllCompanies","companies","searchForCompanies","name","trim","length","getAllJobs","jobs","searchForJobs","title","signUp","userData","firstName","lastName"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL || \"http://localhost:3001\";\n\n/** API Class.\n *\n * Static class tying together methods used to get/send to the API.\n * There shouldn't be any frontend-specific stuff here, and there shouldn't\n * be any API-aware stuff elsewhere in the frontend.\n *\n */\n\nclass JoblyApi {\n  // the token for interactive with the API will be stored here.\n  static token;\n\n  static async request(endpoint, data = {}, method = \"get\") {\n    console.debug(\"API Call:\", endpoint, data, method);\n\n    //there are multiple ways to pass an authorization token, this is how you pass it in the header.\n    //this has been provided to show you another way to pass the token. you are only expected to read this code for this project.\n    const url = `${BASE_URL}/${endpoint}`;\n    const headers = { Authorization: `Bearer ${JoblyApi.token}` };\n    const params = (method === \"get\")\n        ? data\n        : {};\n\n    try {\n      return (await axios({ url, method, data, params, headers })).data;\n    } catch (err) {\n      console.error(\"API Error:\", err.response);\n      let message = err.response.data.error.message;\n      throw Array.isArray(message) ? message : [message];\n    }\n  }\n\n  // Individual API routes\n\n  /** Get details on a company by handle. */\n\n  static async getCompany(handle) {\n    let res = await this.request(`companies/${handle}`);\n    return res.company;\n  }\n\n  static async getAllCompanies() {\n    let res = await this.request('companies');\n    return res.companies;\n  }\n\n  static async searchForCompanies(name) {\n    if (name.trim().length === 0) {\n      return this.getAllCompanies();\n    }\n    else {\n      let res = await this.request(`companies`, { name })\n      return res.companies;\n    }\n  }\n\n  static async getAllJobs() {\n    let res = await this.request('jobs');\n    return res.jobs;\n  }\n\n  static async searchForJobs(title) {\n    if (title.trim().length === 0) {\n      return this.getAllJobs();\n    }\n    else {\n      let res = await this.request(`jobs`, { title })\n      return res.jobs;\n    }\n  }\n\n  static async signUp(userData) {\n    userData.firstName = userData['first-name'];\n    userData.lastName = userData['last-name'];\n    delete userData['first-name'];\n    delete userData['last-name'];\n    \n    const res = await this.request('auth/register', userData, 'post');\n    return res.token;\n  }\n  \n  // obviously, you'll add a lot here ...\n}\n\n// for now, put token (\"testuser\" / \"password\" on class)\nJoblyApi.token = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZ\" +\n    \"SI6InRlc3R1c2VyIiwiaXNBZG1pbiI6ZmFsc2UsImlhdCI6MTU5ODE1OTI1OX0.\" +\n    \"FtrMwBQwe6Ue-glIFgz_Nf8XxRT2YecFCiSpYL0fCXc\";\n\nexport default JoblyApi;\n"]},"metadata":{},"sourceType":"module"}