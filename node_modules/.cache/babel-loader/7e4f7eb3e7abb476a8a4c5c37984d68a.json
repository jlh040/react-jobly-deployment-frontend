{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport JoblyApi from '../api';\n\nconst useGetUser = (tokenFromLogin, tokenFromSignUp, JoblyApi) => {\n  _s();\n\n  const [user, setUser] = useState();\n  useEffect(() => {\n    const getInformation = async () => {\n      if (!(tokenFromLogin || tokenFromSignUp)) {\n        return;\n      } else {\n        const userResp = await JoblyApi.getUser(tokenFromSignUp || tokenFromLogin);\n        JoblyApi.token = tokenFromLogin || tokenFromSignUp;\n        setUser(userResp);\n      }\n    };\n\n    getInformation();\n  }, [tokenFromLogin, tokenFromSignUp]);\n  return [user, setUser];\n};\n\n_s(useGetUser, \"hT6C72rcbfRUedrDq+TPaFfRI/M=\");\n\nexport default useGetUser;","map":{"version":3,"sources":["/Users/jeffhall/Desktop/Software Engineering Career Track/Section_IV/Exercises/Unit_43_react_jobly/react-jobly/frontend/src/hooks/useGetUser.js"],"names":["React","useState","useEffect","JoblyApi","useGetUser","tokenFromLogin","tokenFromSignUp","user","setUser","getInformation","userResp","getUser","token"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,QAArB;;AAEA,MAAMC,UAAU,GAAG,CAACC,cAAD,EAAiBC,eAAjB,EAAkCH,QAAlC,KAA+C;AAAA;;AAChE,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,EAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,cAAc,GAAG,YAAY;AACjC,UAAI,EAAEJ,cAAc,IAAIC,eAApB,CAAJ,EAA0C;AACxC;AACD,OAFD,MAGK;AACH,cAAMI,QAAQ,GAAG,MAAMP,QAAQ,CAACQ,OAAT,CAAiBL,eAAe,IAAID,cAApC,CAAvB;AACAF,QAAAA,QAAQ,CAACS,KAAT,GAAiBP,cAAc,IAAIC,eAAnC;AACAE,QAAAA,OAAO,CAACE,QAAD,CAAP;AACD;AACF,KATD;;AAUAD,IAAAA,cAAc;AACf,GAZQ,EAYN,CAACJ,cAAD,EAAiBC,eAAjB,CAZM,CAAT;AAcA,SAAO,CAACC,IAAD,EAAOC,OAAP,CAAP;AACD,CAlBD;;GAAMJ,U;;AAoBN,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport JoblyApi from '../api';\n\nconst useGetUser = (tokenFromLogin, tokenFromSignUp, JoblyApi) => {\n  const [user, setUser] = useState();\n\n  useEffect(() => {\n    const getInformation = async () => {\n      if (!(tokenFromLogin || tokenFromSignUp)) {\n        return;\n      }\n      else {\n        const userResp = await JoblyApi.getUser(tokenFromSignUp || tokenFromLogin);\n        JoblyApi.token = tokenFromLogin || tokenFromSignUp;\n        setUser(userResp);\n      }\n    };\n    getInformation();\n  }, [tokenFromLogin, tokenFromSignUp]);\n\n  return [user, setUser];\n};\n\nexport default useGetUser;"]},"metadata":{},"sourceType":"module"}