{"ast":null,"code":"var _jsxFileName = \"/Users/jeffhall/Desktop/Software Engineering Career Track/Section_IV/Exercises/Unit_43_react_jobly/react-jobly/frontend/src/Companies.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport UserContext from './userContext';\nimport CompanyList from './CompanyList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Companies = () => {\n  _s();\n\n  const {\n    JoblyApi,\n    user\n  } = useContext(UserContext);\n  const [hasLoaded, setHasLoaded] = useState(false);\n  const [companies, setCompanies] = useState([]);\n  useEffect(() => {\n    const getCompanies = async () => {\n      const res = await JoblyApi.getAllCompanies();\n      setCompanies(res);\n      setHasLoaded(true);\n      console.log(user);\n      let val = user ? null : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 31\n      }, this);\n    };\n\n    getCompanies();\n  }, [user]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: hasLoaded ? /*#__PURE__*/_jsxDEV(CompanyList, {\n      companies: companies,\n      setCompanies: setCompanies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Companies, \"An27W9RTDwgU4rxuS+XX2yJpeiI=\");\n\n_c = Companies;\nexport default Companies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Companies\");","map":{"version":3,"sources":["/Users/jeffhall/Desktop/Software Engineering Career Track/Section_IV/Exercises/Unit_43_react_jobly/react-jobly/frontend/src/Companies.js"],"names":["React","useState","useEffect","useContext","Redirect","UserContext","CompanyList","Companies","JoblyApi","user","hasLoaded","setHasLoaded","companies","setCompanies","getCompanies","res","getAllCompanies","console","log","val"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAqBN,UAAU,CAACE,WAAD,CAArC;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,EAAD,CAA1C;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,YAAY,GAAG,YAAY;AAC/B,YAAMC,GAAG,GAAG,MAAMP,QAAQ,CAACQ,eAAT,EAAlB;AACAH,MAAAA,YAAY,CAACE,GAAD,CAAZ;AACAJ,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYT,IAAZ;AACA,UAAIU,GAAG,GAAGV,IAAI,GAAG,IAAH,gBAAU,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAAxB;AACD,KAND;;AAOAK,IAAAA,YAAY;AACb,GATQ,EASN,CAACL,IAAD,CATM,CAAT;AAWA,sBACE;AAAA,cACGC,SAAS,gBACR,QAAC,WAAD;AAAa,MAAA,SAAS,EAAEE,SAAxB;AAAmC,MAAA,YAAY,EAAEC;AAAjD;AAAA;AAAA;AAAA;AAAA,YADQ,gBAEN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHN;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAtBD;;GAAMN,S;;KAAAA,S;AAwBN,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport UserContext from './userContext';\nimport CompanyList from './CompanyList';\n\nconst Companies = () => {\n  const { JoblyApi, user } = useContext(UserContext);\n  const [hasLoaded, setHasLoaded] = useState(false);\n  const [companies, setCompanies] = useState([]);\n  useEffect(() => {\n    const getCompanies = async () => {\n      const res = await JoblyApi.getAllCompanies();\n      setCompanies(res);\n      setHasLoaded(true);\n      console.log(user)\n      let val = user ? null : <Redirect to=\"/login\" />\n    };\n    getCompanies()\n  }, [user]);\n\n  return (\n    <div>\n      {hasLoaded ? (\n        <CompanyList companies={companies} setCompanies={setCompanies} /> \n      ) : <h3>Loading...</h3>}\n    </div>\n  )\n};\n\nexport default Companies;"]},"metadata":{},"sourceType":"module"}